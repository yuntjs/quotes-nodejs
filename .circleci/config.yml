# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/quotes-nodejs

    steps:
      - checkout
      - run:
          name: Install ansible
          command: |
            sudo apt-get -y install software-properties-common
            sudo apt-get -y install python-boto
            sudo apt-add-repository -y ppa:ansible/ansible
            sudo apt-get -y update
            sudo apt-get -y install ansible

      - run:
          name: Install dependencies
          command: ansible-playbook ans-nodejs.yml

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run:
          name: Test with mocha
          command: mocha test

      - setup_remote_docker   # (2)

      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      # build and push Docker image
      - run: |
          TAG=0.1.$CIRCLE_BUILD_NUM
          docker build -t   taejunyun/quotesnodejs:$TAG .      # (3)
          docker login -u $DOCKER_USER -p $DOCKER_PASS         # (4)
          docker push taejunyun/quotesnodejs:$TAG

      - run: |
          ./deploy.sh
